spring.application.name=swim
# Database connection configuration
spring.datasource.url=jdbc:mysql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.docker.compose.lifecycle-management=start-and-stop
# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# JPA Batch Size
spring.jpa.properties.hibernate.default_batch_fetch_size=30
# JWT Secret
# jwt.secret=${JWT_SECRET}
# Cookie Secure : http -> false / https -> true
#cookie.secure=${SECURE}
# default pagination
# spring.data.web.pageable.default-page-size=20
# spring.data.web.pageable.max-page-size=1000
# Security Allowed Origin
# spring.security.cors.allowed.origin=${CORS_ALLOWED_ORIGIN}
# Social Login Properties
#spring.security.oauth2.client.registration.naver.redirect-uri=${BASE_URL}/api/login/oauth2/code/naver
#?? ?? BASE_URL ?? ??
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/api/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=nickname, email, profile_image
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
